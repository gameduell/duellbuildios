<?xml version="1.0" encoding="utf-8"?>
<plugin>
	<documentation>
    Use this plugin to build for the iOS platform. Current limitations are mainly that Publishing is not implemented, meaning currently there isn't the possibility to properly sign an and release it. You can however open the xcode project, and configure the signing there and build it to release it.
	</documentation>
	<configuration>
		<elem name="icon">
			Use this to configure where the icon files are. By default they are searched in current_project_path/Icons/ios. The naming and sizing is very strict due to how ios works. To know them, just do a "duell create emptyProject" and see the icons that are on the default project. E.g.: &lt;icon path="Iconys/ios" /&gt;.
		</elem>

		<elem name="splashscreen">
			Use this to configure where the splashscreen files are. By default they are searched in current_project_path/Splashscreens/ios. The naming and sizing is very strict due to how ios works. To know them, just do a "duell create emptyProject" and see the splashscreens that are on the default project. E.g.: &lt;splashscreen path="Splashyscreenys/ios" /&gt;.
		</elem>

		<elem name="framework">
			Use this tag if you want to link against an additional framework. By default Foundation.framework, QuartzCore.framework and UIKit.framework are linked. You can specify the name of the framework and a optionally a path. If no path is specified, then it is assumed to be a system framework. E.g.: &lt;framework name="Something.framework" path="frameworks" /&gt;.
		</elem>

		<elem name="hxcpp-compilation-arg">
			Use this tag if you want to pass an additional compilation argument to the hxcpp compilation of the generated c++ code. E.g.: &lt;hxcpp-compilation-arg value="armv6" /&gt;.
		</elem>

		<elem name="xcode-build-arg">
			Use this to pass an additional argument to the xcode build code building phase. E.g.: &lt;xcode-build-arg value="-Wfoo" /&gt;.
		</elem>

		<elem name="xcode-link-arg">
			Use this to pass an additional argument to the xcode build code linking phase. E.g.: &lt;xcode-link-arg value="-Wfoo" /&gt;.
		</elem>

		<elem name="xcode-project-flag">
			Use this to add an additional project flag to the xcode project. E.g.: &lt;xcode-project-flag name="COMPRESS_PNG_FILES" value="YES" /&gt;.
		</elem>

		<elem name="xcode-target-flag">
			Use this to add an additional target flag to the xcode project. E.g.: &lt;xcode-target-flag name="COMPRESS_PNG_FILES" value="YES" /&gt;.
		</elem>

		<elem name="pre-rendered-icon">
			Use this to specify if your icons are pre rendered or not, by default it is set to true. E.g.: &lt;pre-rendered-icon value="YES" /&gt;.
		</elem>

		<elem name="deployment-target">
			Use this to specify your ios deployment target. You specify the iOS version directly. By default iOS 5 is selected. E.g.: &lt;deployment-target value="6" /&gt;.
		</elem>

		<elem name="target-devices">
			Use this to specify your target devices. 1 is for iPhone, 2 is for iPad, 1,2 for both. By default 1,2 is selected. E.g.: &lt;target-devices value="1,2" /&gt;.
		</elem>

		<elem name="key-store-identity">
			Use this to specify your key store identity. By default it is "iPhone Developer". E.g.: &lt;key-store-identity value="John Smith" /&gt;.
		</elem>

		<elem name="fullscreen">
			Use this to specify if you want to hide the status bar. By defualt it is hidden. E.g.: &lt;fullscreeen value="true" /&gt;.
		</elem>

		<elem name="orientation">
			Use this to specify the orientations you allow on the app. Possible values are UIInterfaceOrientationLandscapeLeft, UIInterfaceOrientationLandscapeRight, UIInterfaceOrientationPortrait, UIInterfaceOrientationPortraitUpsideDown. By default all orientations are allowed. E.g.: &lt;orientation value="UIInterfaceOrientationLandscapeLeft,UIInterfaceOrientationLandscapeRight" /&gt;.
		</elem>

		<elem name="required-capability">
			Use this to specify a required hardware capability for your app. There is another configuration called "capability", that is for software capabilities. E.g.: &lt;required-capability name="gyroscope" value="true" /&gt;.
		</elem>

		<elem name="entitlements">
			Use this to specify the entitlements file for your app. E.g.: &lt;entitlements path="somefile.entitlements" /&gt;.
		</elem>

		<elem name="infoplist-section">
            Use this to add custom parameters to the info.plist file of the project. E.g.: &lt;infoplist-section&gt;&lt;key&gt;NSServices&lt;/key&gt;&lt;dict&gt;&lt;key&gt;NSRestricted&lt;/key&gt;&lt;true/&gt;&lt;/dict&gt;&lt;/infoplist-section&gt;
		</elem>

		<elem name="exceptiondomain">
			You can opt-out of Apple's transport security (ATS) for certain URLs in your Info.plist by using this node. To do so, create nodes of the following format:&lt;exceptiondomain url='de.your.special.domain'&gt;&lt;property key='NSIncludesSubdomains' value='true' /&gt;&lt;/exceptiondomain&gt; You can add as much properties as you want but you need at least one when defining a exceptiondomain. This node needs to be wrapped by 'transportsecurity'.
		</elem>

		<elem name="transportsecurity">
			Specifies exceptions to Apple's default transport security (ATS). You can add specify values for exception domains or allow arbitrary loads. Specify it by the following format:&lt;transportsecurity&gt;&lt;exceptiondomain /&gt;&lt;arbitraryloads /&gt;&lt;/transportsecurity&gt; See 'exceptiondomain' and 'arbitraryloads' for details.
		</elem>

		<elem name="arbitraryloads">
			Disables App Transport Security (ATS) for any domains for which you do not reenable ATS by using an exception domain dictionary. Default value is 'false'.This node needs to be wrapped by 'transportsecurity'.
		</elem>

		<elem name="infoplist-entry">
			Use this to add entries to the info.plist file of the project. Possible values for type are "string", "number", "bool" and "dynamic". "dynamic" will take the value specified literally as is. E.g.: &lt;infoplist-entry key="FacebookAppID" type="string" value="12345678" /&gt;.
		</elem>

		<elem name="sim-device">
			Use this to specify your simulator target device. Use an identifier string to set target device, e.g.: &lt;sim-device value="iPhone-6" /&gt;. If omitted default simulator will be "iPhone-4s".

			List of currently supported devices and available iOS versions:
			iPhone-4s - OS: 7.1, 8.1, 8.2
			iPhone-5 - OS: 7.1, 8.1, 8.2
			iPhone-5s - OS: 7.1, 8.1, 8.2
			iPhone-6-Plus - OS: 8.1, 8.2
			iPhone-6 - OS: 8.1, 8.2
			iPad-2 - OS: 7.1, 8.1, 8.2
			iPad-Retina - OS: 7.1, 8.1, 8.2
			iPad-Air - OS: 7.1, 8.1, 8.2
			Resizable-iPhone - OS: 8.1, 8.2
			Resizable-iPad - OS: 8.1, 8.2

			!! Be sure to enter the ids in a case-sensitive way, otherwise may not work. Make sure those devices and osses are also installed on your machine. !!!
		</elem>

		<elem name="sim-os">
			Use this to specify which OS version the simulator should start. Use an identifier string to set the targeted OS version, e.g.: &lt;sim-os value="8.0" /&gt;. If omitted default OS will be "8.2". Make sure those devices and osses are also installed on your machine. !!!

			List of currently supported OSs and associated devices:
			7.1: iPhone-4s | iPhone-5 | iPhone-5s | iPad-2 | iPad-Retina | iPad-Air
			8.1: iPhone-4s | iPhone-5 | iPhone-5s | iPhone-6-Plus | iPhone-6 | iPad-2 | iPad-Retina | iPad-Air | Resizable-iPhone | Resizable-iPad
			8.2: iPhone-4s | iPhone-5 | iPhone-5s | iPhone-6-Plus | iPhone-6 | iPad-2 | iPad-Retina | iPad-Air | Resizable-iPhone | Resizable-iPad
		</elem>

		<elem name="capability">
			Use this to specify a required software capability for your app. "1 for enabled and "0" for disabled. There is another configuration called "required-capability", that is for hardware capabilities. E.g.: &lt;capability name="Push" value="1" /&gt;.
		</elem>

		<elem name="requires-fullscreen">
			Use this to enable iOS 9 split view for your app. By default it is disabled. E.g.: &lt;requires-fullscreen value="false" /&gt;.
		</elem>

	</configuration>

	<arg name="-debug" type="void">
		<documentation>
			Use this argument if you want to build in debug.
		</documentation>
	</arg>

	<arg name="-simulator" type="void">
		<documentation>
			Use this if you want to application to be built and run on the simulator. Be advised that running on the simulator and device requires different architectures, and so, different compilations. If you use -fast with a simulator execution, you need to rerun the build process if you want to run on the device. This also overrides any architecture definition, and just builds for x86.
		</documentation>
	</arg>

	<arg name="-armv7s" type="void">
		<documentation>
			Use this if you want to build for armv7s.
		</documentation>
	</arg>

	<arg name="-armv7" type="void">
		<documentation>
			Use this if you want to build for armv7.
		</documentation>
	</arg>

	<arg name="-arm64" type="void">
		<documentation>
			Use this if you want to build for arm64.
		</documentation>
	</arg>

	<arg name="-simdevice" type="string">
		<documentation>
			Use this to specify your simulator target device. Specify the device by putting an identifier string after using the argument -simdevice, i.e. -simdevice iPad-2. If omitted default device will point to iPhone-4s.

			List of currently supported devices and available iOS versions:
			iPhone-4s - OS: 7.1, 8.1, 8.2
			iPhone-5 - OS: 7.1, 8.1, 8.2
			iPhone-5s - OS: 7.1, 8.1, 8.2
			iPhone-6-Plus - OS: 8.1, 8.2
			iPhone-6 - OS: 8.1, 8.2
			iPad-2 - OS: 7.1, 8.1, 8.2
			iPad-Retina - OS: 7.1, 8.1, 8.2
			iPad-Air - OS: 7.1, 8.1, 8.2
			Resizable-iPhone - OS: 8.1, 8.2
			Resizable-iPad - OS: 8.1, 8.2

			!! Beware: Will be overridden by configuration in duell_project.xml if &lt;sim-device&gt; is set
			!! Be sure to enter the ids in a case-sensitive way, otherwise may not work. Make sure those devices and osses are also installed on your machine. !!!
		</documentation>
	</arg>

	<arg name="-simos" type="string">
		<documentation>
			Use this to specify which OS version to run on the simulator. Set the OS version like this: -simos 8.0. If omitted default OS will be of version 8.2.

			List of currently supported OSs and associated devices:
			7.1: iPhone-4s | iPhone-5 | iPhone-5s | iPad-2 | iPad-Retina | iPad-Air
			8.1: iPhone-4s | iPhone-5 | iPhone-5s | iPhone-6-Plus | iPhone-6 | iPad-2 | iPad-Retina | iPad-Air | Resizable-iPhone | Resizable-iPad
			8.2: iPhone-4s | iPhone-5 | iPhone-5s | iPhone-6-Plus | iPhone-6 | iPad-2 | iPad-Retina | iPad-Air | Resizable-iPhone | Resizable-iPad

			!! Beware: Will be overridden by configuration in duell_project.xml if &lt;sim-os&gt; is set ! Make sure those devices and osses are also installed on your machine. !!!
		</documentation>
	</arg>

</plugin>
